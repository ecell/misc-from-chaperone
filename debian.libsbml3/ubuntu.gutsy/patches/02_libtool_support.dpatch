#! /bin/sh /usr/share/dpatch/dpatch-run
## 02_libtool_support.dpatch by  <mozo@sfc.keio.ac.jp>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad libsbml-3.2.0~/Makefile.in libsbml-3.2.0/Makefile.in
--- libsbml-3.2.0~/Makefile.in	2008-08-17 22:50:36.000000000 +0900
+++ libsbml-3.2.0/Makefile.in	2008-09-11 07:28:52.000000000 +0900
@@ -185,11 +185,13 @@
   config/libcheck.m4                \
   config/libxml.m4                  \
   config/lisp.m4                    \
+  config/lt_link_helper.sh.in       \
   config/makefile-common-actions.mk \
   config/makefile-common-vars.mk.in \
   config/matlab.m4                  \
   config/missing                    \
   config/mkinstalldirs              \
+  config/mkoctfile_wrapper.sh.in    \
   config/octave.m4                  \
   config/perl.m4                    \
   config/python.m4                  \
@@ -209,7 +211,7 @@
 # makefile-common-actions.mk.
 
 extra_distclean = config.status config.cache config.log autom4te.cache \
-	src/common/config.h src/common/stamp-h1
+	src/common/config.h src/common/stamp-h1 config/lt_link_helper.sh config/mkoctfile_wrapper.sh
 
 # It's safer to remove and recreate the copy of the include files (in the
 # 'include' directory) after a make clean.  Previously we did it in a make
@@ -218,10 +220,6 @@
 
 extra_clean = include libsbml.pc
 
-ifeq "$(HOST_TYPE)" "cygwin"
-  extra_clean += libsbml.la
-endif
-
 
 # -----------------------------------------------------------------------------
 # Primary build actions.
@@ -231,7 +229,7 @@
 # of the form `foo-recursive' to run 'make foo' in directories defined in
 # variable `subdirs'.
 
-all: configure Makefile include all-recursive libsbml.pc libsbml.la
+all: configure Makefile include all-recursive libsbml.pc
 
 docs:;
 ifneq "$(MAKEFLAGS)" ""
@@ -304,46 +302,10 @@
 
 
 # -----------------------------------------------------------------------------
-# libsbml.la.
-# -----------------------------------------------------------------------------
-
-# Currently we only need to provide this under cygwin.  Maybe we should also
-# provide it for libtool users on other platforms?
-
-libsbml.la: Makefile
-ifeq "$(HOST_TYPE)" "cygwin"
-	@rm -f libsbml.pc
-	@echo "# libsbml.la"                             > libsbml.la
-	@echo "# Generated by libSBML's Makefile."      >> libsbml.la
-	@echo ""                                        >> libsbml.la
-	@echo "library_names='libsbml.$(SHAREDLIBEXT)'" >> libsbml.la
-	@echo "libdir='$(LIBDIR)'"                      >> libsbml.la
-	@echo "dlname=''"                               >> libsbml.la
-	@echo "dlopen=''"                               >> libsbml.la
-	@echo "dlpreopen=''"                            >> libsbml.la
-	@echo "old_library=''"                          >> libsbml.la
-	@echo "current=0"                               >> libsbml.la
-	@echo "age=0"                                   >> libsbml.la
-	@echo "revision=0"                              >> libsbml.la
-	@echo "installed=yes"                           >> libsbml.la
-	@echo "shouldnotlink=no"                        >> libsbml.la
-  ifdef USE_XERCES
-	@echo "dependency_libs='${DEPENDENCY_LIBFLAGS}'" >> libsbml.la
-  endif
-  ifdef USE_EXPAT
-	@echo "dependency_libs='${DEPENDENCY_LIBFLAGS}'" >> libsbml.la
-  endif
-  ifdef USE_LIBXML
-	@echo "dependency_libs='${DEPENDENCY_LIBFLAGS}'" >> libsbml.la
-  endif
-endif
-
-
-# -----------------------------------------------------------------------------
 # Installation.
 # -----------------------------------------------------------------------------
 
-install: all install-recursive install-warnings install-pc install-la
+install: all install-recursive install-warnings install-pc
 
 install-docs: install-docs-recursive
 
@@ -362,13 +324,7 @@
 install-pc: libsbml.pc
 	$(INSTALL_SH) libsbml.pc -m 0644 "$(DESTDIR)$(LIBDIR)/pkgconfig/libsbml.pc"
 
-install-la: libsbml.la
-ifeq "$(HOST_TYPE)" "cygwin"
-	$(INSTALL_SH) libsbml.la -m 0644 "$(DESTDIR)$(LIBDIR)/libsbml.la"
-endif
-
-
-uninstall: uninstall-recursive uninstall-libsbml-pc uninstall-libsbml-la
+uninstall: uninstall-recursive uninstall-libsbml-pc
 	@if test -d "$(DESTDIR)$(LIBDIR)"; then \
 	  if test -n "`find $(DESTDIR)$(LIBDIR) -maxdepth 0 -empty`"; then \
 	    echo rmdir "$(DESTDIR)$(LIBDIR)"; \
@@ -409,16 +365,6 @@
 	  fi; \
 	fi;
 
-uninstall-libsbml-la:
-ifeq "$(HOST_TYPE)" "cygwin"
-	@target="$(DESTDIR)$(LIBDIR)/libsbml.la"; \
-	if test -f $$target ; then \
-	  echo rm $$target; \
-	  rm $$target; \
-	fi;
-endif
-
-
 # -----------------------------------------------------------------------------
 # Cleaning.
 # -----------------------------------------------------------------------------
diff -urNad libsbml-3.2.0~/acinclude.m4 libsbml-3.2.0/acinclude.m4
--- libsbml-3.2.0~/acinclude.m4	1970-01-01 09:00:00.000000000 +0900
+++ libsbml-3.2.0/acinclude.m4	2008-09-11 07:28:52.000000000 +0900
@@ -0,0 +1,27 @@
+# generated automatically by aclocal 1.9.6 -*- Autoconf -*-
+
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
+# 2005  Free Software Foundation, Inc.
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+m4_include([config/doxygen.m4])
+m4_include([config/expat.m4])
+m4_include([config/java.m4])
+m4_include([config/libcheck.m4])
+m4_include([config/libxml.m4])
+m4_include([config/lisp.m4])
+m4_include([config/matlab.m4])
+m4_include([config/octave.m4])
+m4_include([config/perl.m4])
+m4_include([config/python.m4])
+m4_include([config/ruby.m4])
+m4_include([config/runldpath.m4])
+m4_include([config/swig.m4])
+m4_include([config/xercesc.m4])
diff -urNad libsbml-3.2.0~/config/lt_link_helper.sh.in libsbml-3.2.0/config/lt_link_helper.sh.in
--- libsbml-3.2.0~/config/lt_link_helper.sh.in	1970-01-01 09:00:00.000000000 +0900
+++ libsbml-3.2.0/config/lt_link_helper.sh.in	2008-09-11 07:28:52.000000000 +0900
@@ -0,0 +1,69 @@
+#!/bin/sh
+
+libdir=@prefix@/lib
+
+progname=`basename "$0"`
+
+dllibext=
+out_dir=
+out_file=
+out_filename=
+args=
+
+TAG=CXX
+
+if test -z "$1"; then
+    echo "${progname}: linker executable must be specified." >&2
+    exit
+fi
+
+linker_tmpdir=`mktemp -d $PWD/XXXXXXXX`
+stage_dir="${linker_tmpdir}/stage"
+mkdir -p "${stage_dir}/${libdir}"
+
+LD="$1"
+shift
+
+while test -n "$1"; do
+    case "$1" in
+        --tag=*)
+            TAG=`echo "$1" | sed -e 's/^--tag=//'`
+            ;;
+        -o)
+            shift
+            out_file="$1"
+            dllibext=`echo "${out_file}" | sed -e 's/.*\(\.[^.]*\)$/\1/'`
+            out_dir=`dirname "${out_file}"`
+            out_filename=`basename "${out_file}" "${dllibext}"`
+            ;;
+        *.o)
+            lt_obj=`echo "$1" | sed -e 's/\.o$/.lo/'`
+            args="${args} \"${lt_obj}\""
+            ;;
+        --libdir)
+            shift
+            libdir="$1" 
+            ;;
+        lib*.la | */lib*.la)
+            mkdir -p "${stage_dir}/${libdir}" && \
+                eval "@abs_top_srcdir@/libtool --mode=install cp \"$1\" \"${stage_dir}/${libdir}\""
+            libname=`basename "$1" | sed -e 's/lib\([^.]*\)\.la/\1/'`
+            args="${args} \"$1\""
+            ;; 
+        *)
+            args="${args} \"$1\""
+            ;;
+    esac
+    shift
+done
+
+if test -z "$out_file"; then
+    echo "${progname}: -o option not specified." >&2
+    rm -rf "${linker_tmpdir}"
+    exit 1
+fi
+
+eval "@abs_top_srcdir@/libtool --tag=\"$TAG\" --mode=link \"$LD\" -rpath \"${libdir}\" -inst-prefix-dir \"${stage_dir}\" -module -avoid-version -export-dynamic -shrext "${dllibext}" -o \"${out_dir}/${out_filename}.la\" $args" && \
+    eval "@abs_top_srcdir@/libtool --mode=install cp \"${out_dir}/${out_filename}.la\" \"${stage_dir}/${libdir}/${out_filename}.la\"" && \
+    cp "${stage_dir}/${libdir}/${out_filename}${dllibext}" "${out_dir}"
+rm -rf "${linker_tmpdir}"
diff -urNad libsbml-3.2.0~/config/makefile-common-actions.mk libsbml-3.2.0/config/makefile-common-actions.mk
--- libsbml-3.2.0~/config/makefile-common-actions.mk	2008-06-30 11:43:36.000000000 +0900
+++ libsbml-3.2.0/config/makefile-common-actions.mk	2008-09-11 07:28:52.000000000 +0900
@@ -40,7 +40,7 @@
 # -----------------------------------------------------------------------------
 
 .SUFFIXES:
-.SUFFIXES: .a .so .dylib .jnilib .c .h .cpp .hpp .o .obj .Po .py .pyc .pyo .i .bundle
+.SUFFIXES: .a .so .dylib .jnilib .c .h .cpp .hpp .o .lo .la .obj .Po .py .pyc .pyo .i .bundle
 
 # The following define default values of variables like `cxxcompile'.  An
 # enclosing makefile can define other values, in which case those
@@ -50,28 +50,22 @@
 
 default_includes ?= -I. -I$(top_include)
 
-# Compiling under cygwin doesn't need -fPIC.
-
-ifneq "$(HOST_TYPE)" "cygwin"
-  FPIC = -fPIC
-endif
-
 # Here follow the generic compilation commands.  (Note: the use of 'sort'
 # here is only to remove duplicates, which the 'sort' function does as a
 # documented side-effect.)
 
-compile ?= $(CC) $(FPIC) $(CPPFLAGS) $(extra_CPPFLAGS) \
-	$(CFLAGS) $(extra_CFLAGS) $(sort $(default_includes) $(INCLUDES))
+compile ?= $(LIBTOOL) --mode=compile $(CC) $(extra_CPPFLAGS) $(extra_CFLAGS) \
+    $(default_includes) $(CPPFLAGS) $(CFLAGS) $(INCLUDES)
 
-cxxcompile ?= $(CXX) $(FPIC) $(CPPFLAGS) $(extra_CPPFLAGS) \
-	$(CXXFLAGS) $(extra_CXXFLAGS) $(sort $(default_includes) $(INCLUDES))
+cxxcompile ?= $(LIBTOOL) --mode=compile $(CXX) $(extra_CPPFLAGS) \
+    $(extra_CXXFLAGS) $(default_includes) $(CPPFLAGS) $(CXXFLAGS) $(INCLUDES)
 
 # For linking libraries, we try to follow the result of the libtool
 # numbering scheme, but at the final end, not in the input format.  (The
 # libtool input format is peculiar to us.)  Curious, this makes the
 # numbering very easy: it's a direct mapping of the libsbml version number.
 
-library_version = $(PACKAGE_VERSION)
+library_version = $(subst $(empty) $(empty),.,$(wordlist 1, 2, $(subst ., ,$(PACKAGE_VERSION)))).0
 
 # `platform_link_flags' is used below in the definition of link_shared_lib.
 # Generally, gcc and ld need -shared, but some systems think different.
@@ -79,14 +73,9 @@
 ifeq "$(HOST_TYPE)" "darwin"
   # MacOS X's normal libraries have the extension .dylib, and "bundles"
   # have .so.  The default shared library definition here builds .dylib.
-  platform_link_flags ?= -dynamiclib -flat_namespace \
-	-current_version $(library_version)
-else
-ifeq "$(HOST_TYPE)" "aix5.3.0.0" 
-  platform_link_flags ?= -G
+  platform_link_flags ?= -dynamiclib -flat_namespace
 else
-  platform_link_flags ?= -shared
-endif
+  platform_link_flags ?= 
 endif
 
 # The following defines the default function for linking objects into a
@@ -97,8 +86,19 @@
 
 ifndef link_shared_lib
   define link_shared_lib 
-    $(CXX) $(LDFLAGS) $(extra_LDFLAGS) $(platform_link_flags) \
-	-o $(1) $(objfiles) $(extra_LIBS) $(LIBS)
+    $(LIBTOOL) --mode=link $(CXX) $(LDFLAGS) $(extra_LDFLAGS) \
+    -version-info $(subst .,:,$(library_version)) \
+    -inst-prefix-dir "$(DESTDIR)" \
+    $(platform_link_flags) -rpath $(LIBDIR) -o $(1) $(objfiles:.o=.lo) \
+    $(extra_LIBS) $(LIBS)
+  endef
+endif
+
+ifndef link_dl_lib
+  define link_dl_lib
+    $(TOP_SRCDIR)/config/lt_link_helper.sh $(CXX) --libdir $(LIBDIR) \
+    $(LDFLAGS) $(extra_LDFLAGS) $(platform_link_flags) \
+    -o $(1) $(objfiles:.o=.lo) $(extra_LIBS) $(LIBS)
   endef
 endif
 
@@ -121,16 +121,16 @@
 # filter the results.  This abstracts out this common operation.
 
 make_objects_list = \
-  $(filter %.$(OBJEXT),\
-    $(patsubst %.cpp,%.$(OBJEXT),$(1)) $(patsubst %.c,%.$(OBJEXT),$(1)))
+  $(filter %.lo,\
+    $(patsubst %.cpp,%.lo,$(1)) $(patsubst %.c,%.lo,$(1)))
 
 # The following generate the list of object file names and dependency file
 # names from the list of source files.  They're used for the generic
 # compilation rules further below.
 
-tmplist  ?= $(sources:.cpp=.$(OBJEXT)) $(sources:.c=.$(OBJEXT))
-objfiles ?= $(filter %.$(OBJEXT),$(tmplist))
-depfiles ?= $(addprefix $(DEPDIR)/,$(objfiles:.$(OBJEXT)=.$(DEPEXT)))
+tmplist  ?= $(sources:.cpp=.lo) $(sources:.c=.lo)
+objfiles ?= $(filter %.lo,$(tmplist))
+depfiles ?= $(addprefix $(DEPDIR)/,$(objfiles:.lo=.$(DEPEXT)))
 
 # This next line includes the dependency files.  This doesn't use
 # $depfiles, but rather a wildcard on the actual files, so that if they
@@ -154,42 +154,18 @@
 
 endif
 
-%.so ../%.so: $(objfiles)
-	$(call link_shared_lib,$@)
-
-%.$(JNIEXT) ../%.$(JNIEXT): $(objfiles)
+%.la ../%.la: $(objfiles)
 	$(call link_shared_lib,$@)
 
 %.$(SHAREDLIBEXT) ../%.$(SHAREDLIBEXT): $(objfiles)
-	$(call link_shared_lib,$@)
-
-# The following define generic rules for creating object files.
-
-ifeq "$(HOST_TYPE)" "aix"
-
-.c.$(OBJEXT):
-	$(compile) -c -o $@ $<
-
-.c.obj:
-	if $(compile) -c -o $@ \
-	  `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
-	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.$(DEPEXT)"; \
-	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
-	fi
-
-.cpp.$(OBJEXT) .cxx.$(OBJEXT):
-	$(cxxcompile) -c -o $@ $<
+	$(call link_dl_lib,$@)
 
-.cpp.obj:
-	if $(cxxcompile) -c -o $@ \
-	  `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
-	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.$(DEPEXT)"; \
-	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
-	fi
+%.$(JNIEXT) ../%.$(JNIEXT): $(objfiles)
+	$(call link_dl_lib,$@)
 
-else
+# The following define generic rules for creating object files.
 
-.c.$(OBJEXT):
+.c.lo:
 	$(compile) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.$(DEPEXT)" -c -o $@ $<
 
 .c.obj:
@@ -199,7 +175,7 @@
 	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
 	fi
 
-.cpp.$(OBJEXT) .cxx.$(OBJEXT):
+.cpp.lo .cxx.lo:
 	$(cxxcompile) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.$(DEPEXT)" -c -o $@ $<
 
 .cpp.obj:
@@ -209,12 +185,10 @@
 	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
 	fi
 
-endif
-
 ifeq "$(HOST_TYPE)" "darwin"
 
 %.bundle ../%.bundle: $(objfiles)
-	$(call link_shared_lib,$@)
+	$(call link_dl_lib,$@)
 
 endif
 
@@ -324,18 +298,7 @@
 
 define install_library
   $(MKINSTALLDIRS) $(DESTDIR)$(LIBDIR)
-  @if test "$(suffix $(1))" = ".so" -o "$(suffix $(1))" = ".dylib" -o "$(suffix $(1))" = ".jnilib"; then \
-    finalname="$(notdir $(basename $(1))).$(library_version)$(suffix $(1))"; \
-    echo $(INSTALL_SH) $(1) $(2)/$$finalname; \
-    $(INSTALL_SH) $(1) $(2)/$$finalname; \
-    echo $(install_strip) $(1) $(2)/$$finalname; \
-    $(install_strip) $(1) $(2)/$$finalname; \
-    echo ln -fs $$finalname $(2)/$(notdir $(1)); \
-    ln -fs $$finalname $(2)/$(notdir $(1)); \
-  else \
-    echo $(INSTALL_SH) $(1) $(2); \
-    $(INSTALL_SH) $(1) $(2); \
-  fi
+  $(LIBTOOL) --mode=install $(INSTALL_SH) $(1) $(DESTDIR)/$(LIBDIR)
 endef
 
 to_install_libraries = $(addprefix install-,$(libraries))
@@ -408,7 +371,7 @@
 
 define uninstall_library
   @if test -f $(1); then \
-    finalname="$(notdir $(basename $(1))).$(library_version)$(suffix $(1))"; \
+    finalname="$(notdir $(basename $(1)))$(suffix $(1)).$(library_version)"; \
     target="$(2)/$$finalname"; \
     if test -f $$target ; then \
       echo rm $$target; \
@@ -555,7 +518,7 @@
 clean-normal: mostlyclean clean-libraries clean-libtool clean-extras
 
 clean-generic:
-	-rm -f *.$(OBJEXT) core *.core
+	-rm -f *.lo *.$(OBJEXT) core *.core
 
 clean-libtool:
 	-rm -rf .libs _libs
@@ -575,7 +538,7 @@
 endif
 
 mostlyclean-libtool:
-	-rm -f *.lo
+	-rm -f *.lo *.la *.loT
 
 distclean: clean distclean-compile distclean-depend distclean-generic \
 	distclean-tags distclean-libtool
diff -urNad libsbml-3.2.0~/config/makefile-common-vars.mk.in libsbml-3.2.0/config/makefile-common-vars.mk.in
--- libsbml-3.2.0~/config/makefile-common-vars.mk.in	2008-07-27 09:28:13.000000000 +0900
+++ libsbml-3.2.0/config/makefile-common-vars.mk.in	2008-09-11 07:28:52.000000000 +0900
@@ -144,6 +144,9 @@
 OCTAVE            = @OCTAVE@
 MKOCTFILE         = @MKOCTFILE@
 MKOCTFILE_FLAGS   = @MKOCTFILE_FLAGS@
+MKOCTFILE_WRAPPER = $(SHELL) $(top_srcdir)/config/mkoctfile_wrapper.sh
+LOCALOCTFILEDIR   = @LOCALOCTFILEDIR@
+OCTAVE_CONFIG     = @OCTAVE_CONFIG@
 OCTAVEEXT         = @OCTAVEEXT@
 
 USE_LISP          = @USE_LISP@
@@ -219,7 +222,10 @@
 PACKAGE_VERSION   = @PACKAGE_VERSION@
 RANLIB            = @RANLIB@
 SHAREDLIBEXT      = @SHAREDLIBEXT@
+LIBTOOL           = @LIBTOOL@
 SHELL             = @SHELL@
+SN                = @SN@
+GACUTIL           = @GACUTIL@
 
 LIBSBML_VERSION   = @PACKAGE_VERSION@
 LIBSBML_VERSION_NUMERIC = @LIBSBML_VERSION_NUMERIC@
diff -urNad libsbml-3.2.0~/config/mkoctfile_wrapper.sh.in libsbml-3.2.0/config/mkoctfile_wrapper.sh.in
--- libsbml-3.2.0~/config/mkoctfile_wrapper.sh.in	1970-01-01 09:00:00.000000000 +0900
+++ libsbml-3.2.0/config/mkoctfile_wrapper.sh.in	2008-09-11 07:28:52.000000000 +0900
@@ -0,0 +1,17 @@
+#!/bin/sh
+SHAREDLIBEXT=@SHAREDLIBEXT@
+
+args=
+while test ! -z "$1"; do
+    if test -f "$1" && expr "$1" : ".*lib.*\\.$SHAREDLIBEXT\$" > /dev/null; then
+        args="$args '-L`dirname \"$1\"`' '-l`basename \"$1\" \".$SHAREDLIBEXT\" | sed -e 's/^lib//'`'"
+    elif expr "$1" : "-f" > /dev/null; then
+        CFLAGS="$CFLAGS $1"
+    else
+        args="$args '$1'"
+    fi
+    shift
+done
+
+export CFLAGS
+eval "exec $args"
diff -urNad libsbml-3.2.0~/config/octave.m4 libsbml-3.2.0/config/octave.m4
--- libsbml-3.2.0~/config/octave.m4	2008-06-30 11:43:36.000000000 +0900
+++ libsbml-3.2.0/config/octave.m4	2008-09-11 07:28:52.000000000 +0900
@@ -42,9 +42,13 @@
                      [no-octave-found], [$with_octave/bin])
       AC_PATH_PROG([MKOCTFILE], [mkoctfile], [$with_octave/bin/mkoctfile],
                      [no-mkoctfile-found], [$with_octave/bin])
+      AC_PATH_PROG([OCTAVE_CONFIG], [octave-config],
+                   [$with_octave/bin/octave-config],
+                     [no-octave-config-found], [$with_octave/bin])
     else
       AC_PATH_PROG([OCTAVE], [octave])
       AC_PATH_PROG([MKOCTFILE], [mkoctfile])
+      AC_PATH_PROG([OCTAVE_CONFIG], [octave-config])
     fi
 
     if test -z "$OCTAVE"; then
@@ -131,13 +135,13 @@
       fi
     fi
 
-    dnl The following should probably be conditional on the platform, but I
-    dnl don't have enough experience right now to figure out what the 
-    dnl variations need to be.  So punt.
-
     MKOCTFILE_FLAGS="--mex"
     OCTAVEEXT="mex"
 
+    dnl get rid of prefix part from the directory name of the local oct file
+    dnl repository in order to rebase it later.
+    LOCALOCTFILEDIR=`"$OCTAVE_CONFIG" -p LOCALOCTFILEDIR | sed -e "s#^\`\"$OCTAVE_CONFIG\" -p PREFIX\`##"`
+
     AC_DEFINE([USE_OCTAVE], 1, [Define to 1 to use Octave])
     AC_SUBST(USE_OCTAVE, 1)
 
@@ -145,6 +149,7 @@
     AC_SUBST(MKOCTFILE)
     AC_SUBST(MKOCTFILE_FLAGS)
     AC_SUBST(OCTAVEEXT)
+    AC_SUBST(LOCALOCTFILEDIR) 
 
   fi
 
diff -urNad libsbml-3.2.0~/configure.ac libsbml-3.2.0/configure.ac
--- libsbml-3.2.0~/configure.ac	2008-08-17 02:58:40.000000000 +0900
+++ libsbml-3.2.0/configure.ac	2008-09-11 07:28:52.000000000 +0900
@@ -139,13 +139,17 @@
 AC_PROG_CXX
 AC_PROG_CC
 AC_PROG_CPP
-AC_PROG_RANLIB
+AC_LIBTOOL_WIN32_DLL
+AC_PROG_LIBTOOL
 AC_PROG_INSTALL
 AC_PROG_MAKE_SET
 
+AC_SUBST(LIBTOOL)
+
 AC_PATH_PROG([AUTOCONF],[autoconf],[autoconf])
 AC_PATH_PROG([ACLOCAL],[aclocal],[aclocal])
-AC_PATH_PROG([AR],[ar],[ar])
+AC_PATH_PROGS([SN], [sn])
+AC_PATH_PROGS([GACUTIL], [gacutil])
 
 CONFIG_PROG_SWIG(1.3.33)
 CONFIG_PROG_PYTHON
@@ -234,7 +238,9 @@
 dnl Output
 dnl ---------------------------------------------------------------------------
 
+AC_CONFIG_FILES([config/lt_link_helper.sh], [chmod a+x config/lt_link_helper.sh])
 AC_CONFIG_FILES([config/makefile-common-vars.mk])
+AC_CONFIG_FILES([config/mkoctfile_wrapper.sh], [chmod a+x config/mkoctfile_wrapper.sh])
 AC_CONFIG_FILES([./Makefile])
 
 AC_CONFIG_FILES([src/Makefile])
diff -urNad libsbml-3.2.0~/src/annotation/test/Makefile.in libsbml-3.2.0/src/annotation/test/Makefile.in
--- libsbml-3.2.0~/src/annotation/test/Makefile.in	2008-08-20 22:49:53.000000000 +0900
+++ libsbml-3.2.0/src/annotation/test/Makefile.in	2008-09-11 07:28:59.000000000 +0900
@@ -122,8 +122,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 otherdirs     = .. ../../util ../../xml ../../math ../../sbml ../../validator \
 	../../validator/constraints ../../units ../../compress
 
@@ -131,7 +131,7 @@
   otherdirs +=	../../sbml/layout
 endif
 
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
 ifdef USE_LIBCHECK
diff -urNad libsbml-3.2.0~/src/bindings/csharp/Makefile.in libsbml-3.2.0/src/bindings/csharp/Makefile.in
--- libsbml-3.2.0~/src/bindings/csharp/Makefile.in	2008-08-20 22:50:07.000000000 +0900
+++ libsbml-3.2.0/src/bindings/csharp/Makefile.in	2008-09-11 07:28:52.000000000 +0900
@@ -95,9 +95,9 @@
 SWIGFLAGS        += $(CSHARP_SWIGFLAGS) -I../swig 
 SWIGFLAGS_WIN     = -DSWIGWIN -DSWIG_CSHARP_NO_WSTRING_HELPER
 
-extra_LDFLAGS     = $(CSHARP_LDFLAGS) -L../..
+extra_LDFLAGS     = $(CSHARP_LDFLAGS)
 
-extra_LIBS        = -lsbml 
+extra_LIBS        = ../../libsbml.la
 
 ifdef USE_EXPAT
   extra_CPPFLAGS += @EXPAT_CPPFLAGS@
@@ -181,7 +181,7 @@
 # `extra_clean' and `extra_distclean' determine the files and directories
 # removed during "make clean" and "make distclean".
 
-extra_clean = $(csproxy_lib) $(dllimport_lib) $(check_runner_exe) $(tmpfiles)
+extra_clean = $(csproxy_lib) $(dllimport_lib) $(check_runner_exe) $(tmpfiles) libsbmlcs.snk
 
 extra_distclean = 
 
@@ -201,6 +201,12 @@
 
 ifeq "$(HOST_TYPE)" "darwin"
   platform_link_flags = -bundle
+  # environment variable MACOSX_DEPLOYMENT_TARGET must be set to 10.3 or later
+  # to use -undefined dynamic_lookup.
+  macosx_version=$(shell sw_vers -productVersion | cut -d"." -f1,2)
+  export MACOSX_DEPLOYMENT_TARGET=${macosx_version}
+%.$(CSHARP_EXT): $(patsubst %.cpp, %.lo, $(patsubst %.c, %.lo, $(sources)))
+	$(call link_dl_lib,$@)
 endif
 
 # 
@@ -290,7 +296,8 @@
 
 
 $(csproxy_lib): $(outpath)/libsbml.cs $(dllimport_lib)
-	"$(CSHARP_COMPILER)" $(CSC_OPT_SHARED) $(CSC_OPT_OUTPUT)$(csproxy_lib) $(outpath)/*.cs
+	"$(SN)" -k libsbmlcs.snk
+	"$(CSHARP_COMPILER)" $(CSC_OPT_SHARED) $(CSC_OPT_OUTPUT)$(csproxy_lib) $(outpath)/*.cs /keyfile:libsbmlcs.snk
 
 
 $(outpath)/libsbml.cs: libsbml_wrap.cpp 
@@ -424,18 +431,23 @@
 # -----------------------------------------------------------------------------
 
 install: check_swigfile_consistency $(libraries)
-	@list='$(libraries)'; for lib in $$list; do \
-	  echo "$(INSTALL) $$lib $(DESTDIR)$(LIBDIR)"; \
-	  $(INSTALL) $$lib $(DESTDIR)$(LIBDIR); \
-	done;
+	$(MKINSTALLDIRS) $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0
+	for lib in $(csproxy_lib); do \
+	  $(GACUTIL) /i $$lib /root $(DESTDIR)$(LIBDIR); \
+	  $(INSTALL_SH) $$lib $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0/$$lib; \
+	done
+	for lib in $(dllimport_lib); do \
+	  $(INSTALL_SH) $$lib $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0/$$lib; \
+	done
 
 uninstall:
-	@list='$(libraries)'; for lib in $$list; do \
-	  if test -f "$(DESTDIR)$(LIBDIR)/$$lib"; then \
-	    echo rm "$(DESTDIR)$(LIBDIR)/$$lib"; \
-	    rm $(DESTDIR)$(LIBDIR)/$$lib; \
-          fi; \
-	done;
+	for lib in $(csproxy_lib); do \
+	  rm -f $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0/$$lib; \
+	  $(GACUTIL) /u $$lib /root $(DESTDIR)$(LIBDIR); \
+	done
+	for lib in $(dllimport_lib); do \
+	  rm -f $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0/$$lib; \
+	done
 
 installcheck:
 
diff -urNad libsbml-3.2.0~/src/bindings/java/Makefile.in libsbml-3.2.0/src/bindings/java/Makefile.in
--- libsbml-3.2.0~/src/bindings/java/Makefile.in	2008-09-11 07:28:52.000000000 +0900
+++ libsbml-3.2.0/src/bindings/java/Makefile.in	2008-09-11 07:28:52.000000000 +0900
@@ -60,9 +60,9 @@
 extra_CPPFLAGS    = $(JAVA_CPPFLAGS) -I../swig
 SWIGFLAGS        += $(JAVA_CPPFLAGS) -I../swig
 
-extra_LDFLAGS     = $(JAVA_LDFLAGS) -L../..
+extra_LDFLAGS     = $(JAVA_LDFLAGS)
 
-extra_LIBS        = -lsbml $(JAVA_LIBS)
+extra_LIBS        = ../../libsbml.la $(JAVA_LIBS)
 
 ifdef USE_EXPAT
   extra_CPPFLAGS += @EXPAT_CPPFLAGS@ 
@@ -142,7 +142,7 @@
 # build directives of `makefile-common-actions.mk'.
 
 .SUFFIXES:
-.SUFFIXES: .i .cpp .h .java .class .jar .o .obj .so .dylib
+.SUFFIXES: .i .cpp .h .java .class .jar .lo .la .o .obj .so .dylib
 
 # The default action is to remake everything.
 
@@ -315,9 +315,17 @@
 # -----------------------------------------------------------------------------
 
 install: check_swigfile_consistency $(libraries)
-	@list='$(libraries)'; for lib in $$list; do \
-	  echo "$(INSTALL) $$lib $(DESTDIR)$(LIBDIR)"; \
-	  $(INSTALL) $$lib $(DESTDIR)$(LIBDIR); \
+	list='$(libraries)'; for lib in $$list; do \
+	  if echo $$lib | grep '\.$(JNIEXT)$$' >/dev/null; then \
+		$(MKINSTALLDIRS) $(DESTDIR)$(LIBDIR)/jni; \
+	    $(INSTALL_SH) $$lib $(DESTDIR)$(LIBDIR)/jni; \
+	  elif echo $$lib | grep '\.jar$$' >/dev/null; then \
+		$(MKINSTALLDIRS) $(DESTDIR)$(DATADIR)/java; \
+	    $(INSTALL_SH) $$lib $(DESTDIR)$(DATADIR)/java; \
+	  else \
+		$(MKINSTALLDIRS) $(DESTDIR)$(LIBDIR); \
+	    $(INSTALL_SH) $$lib $(DESTDIR)$(LIBDIR); \
+	  fi; \
 	done;
 
 uninstall:
diff -urNad libsbml-3.2.0~/src/bindings/octave/Makefile.in libsbml-3.2.0/src/bindings/octave/Makefile.in
--- libsbml-3.2.0~/src/bindings/octave/Makefile.in	2008-08-20 22:50:02.000000000 +0900
+++ libsbml-3.2.0/src/bindings/octave/Makefile.in	2008-09-11 07:28:52.000000000 +0900
@@ -76,7 +76,7 @@
 # `extra_clean' and `extra_distclean' determine the files and directories
 # removed during "make clean" and "make distclean".
 
-extra_clean = TranslateSBML.$(OCTAVEEXT)
+extra_clean = TranslateSBML.$(OCTAVEEXT) libsbml.so* libsbml.a
 
 extra_disclean = $(matlab_sources)
 
@@ -95,10 +95,13 @@
 	  fi; \
 	done
 
-flags = $(MKOCTFILE_FLAGS) -DUSE_OCTAVE -I../.. -I../../../include -L../..
+flags = $(MKOCTFILE_FLAGS) -DUSE_OCTAVE -I../.. -I../../../include
 
-%.$(OCTAVEEXT): %.c
-	$(MKOCTFILE) $(flags) $^ -lsbml $(MKOCTFILE_LIBS)
+TranslateSBML.lo: TranslateSBML.c
+	$(LIBTOOL) --tag=CC --mode=compile $(MKOCTFILE_WRAPPER) $(MKOCTFILE) -c -o $@ $(flags) $<
+
+%.$(OCTAVEEXT): %.lo
+	$(TOP_SRCDIR)/config/lt_link_helper.sh $(MKOCTFILE_WRAPPER) --libdir $(LIBDIR) $(MKOCTFILE) -o $@ $(flags) $^ ../../libsbml.la $(MKOCTFILE_LIBS)
 
 
 # -----------------------------------------------------------------------------
@@ -124,11 +127,17 @@
 # Installation.
 # -----------------------------------------------------------------------------
 
-install: all install-libraries
+install: all
+	for i in $(libraries); do \
+	  $(INSTALL_SH) $$i $(DESTDIR)$(prefix)$(LOCALOCTFILEDIR)/$$i; \
+	done
 
 installdirs: all
 
-uninstall: uninstall-libraries
+uninstall:
+	for i in $(libraries); do \
+	  rm $(DESTDIR)$(prefix)$(LOCALOCTFILEDIR)/$$i; \
+	done
 
 
 # -----------------------------------------------------------------------------
diff -urNad libsbml-3.2.0~/src/bindings/perl/Makefile.PL.in libsbml-3.2.0/src/bindings/perl/Makefile.PL.in
--- libsbml-3.2.0~/src/bindings/perl/Makefile.PL.in	2008-08-20 22:50:04.000000000 +0900
+++ libsbml-3.2.0/src/bindings/perl/Makefile.PL.in	2008-09-11 07:28:52.000000000 +0900
@@ -50,10 +50,9 @@
               MAKEFILE    => 'Makefile-perl',
               INSTALLDIRS => "site",
               LIBS        => "@XERCES_LDFLAGS@ @EXPAT_LDFLAGS@ @LIBXML_LDFLAGS@ @XERCES_LIBS@ @EXPAT_LIBS@ @LIBXML_LIBS@ @ZLIB_LIBS@ @BZ2_LIBS@ @LIBS@ -lm -lstdc++",
-	      CC          => "@CXX@",
 	      CCFLAGS     => "@PERL_CPPFLAGS@",
               INC         => "-I../swig -I../.. -I../../../include",
-              MYEXTLIB    => "../../libsbml.a",
+              MYEXTLIB    => "../../libsbml.la",
               macro       => {USE_SWIG => q[@USE_SWIG@]},
               OBJECT      => "LibSBML_wrap.o",
 	      MAN1PODS    => {},
diff -urNad libsbml-3.2.0~/src/bindings/perl/Makefile.in libsbml-3.2.0/src/bindings/perl/Makefile.in
--- libsbml-3.2.0~/src/bindings/perl/Makefile.in	2008-08-20 22:50:04.000000000 +0900
+++ libsbml-3.2.0/src/bindings/perl/Makefile.in	2008-09-11 07:28:52.000000000 +0900
@@ -139,7 +139,9 @@
 	@ echo "Reconfigure --with-perl in order to build the perl-bindings"
 	exit 1
 else
-	$(PERL) Makefile.PL $(if $(LIB),LIB=$(LIB),)
+	$(PERL) Makefile.PL $(if $(LIB),LIB=$(LIB),) \
+	  CC="$(LIBTOOL) --mode=compile $(CXX)" \
+	  LD="$(TOP_SRCDIR)/config/lt_link_helper.sh $(CXX) --libdir $(LIBDIR)"
 # The following perl commands add missing -lstdc++ option to EXTRALIBS and
 # LDLOADLIBS in Makefile-perl.
 # ExtUtil::Makemaker may ignore -lstdc++ option in some environments (e.g. MacOSX, cygwin)
diff -urNad libsbml-3.2.0~/src/bindings/python/Makefile.in libsbml-3.2.0/src/bindings/python/Makefile.in
--- libsbml-3.2.0~/src/bindings/python/Makefile.in	2008-08-20 22:50:03.000000000 +0900
+++ libsbml-3.2.0/src/bindings/python/Makefile.in	2008-09-11 07:28:52.000000000 +0900
@@ -56,6 +56,8 @@
   # to use -undefined dynamic_lookup.
   macosx_version=$(shell sw_vers -productVersion | cut -d"." -f1,2)
   export MACOSX_DEPLOYMENT_TARGET=${macosx_version}
+%.so: $(patsubst %.cpp, %.lo, $(patsubst %.c, %.lo, $(sources)))
+	$(call link_dl_lib,$@)
 else
   libraries = _libsbml.$(SHAREDLIBEXT)
 endif
@@ -78,8 +80,8 @@
   extra_CPPFLAGS += -Wno-long-double
 endif
 
-extra_LDFLAGS  = $(PYTHON_LDFLAGS) -L../..
-extra_LIBS     = -lsbml $(PYTHON_LIBS)
+extra_LDFLAGS  = $(PYTHON_LDFLAGS)
+extra_LIBS     = ../../libsbml.la $(PYTHON_LIBS)
 
 ifdef USE_EXPAT
   extra_CPPFLAGS += @EXPAT_CPPFLAGS@ 
@@ -146,9 +148,9 @@
 # -----------------------------------------------------------------------------
 
 .SUFFIXES:
-.SUFFIXES: .i .cpp .py .pyc .pyo .o .obj
+.SUFFIXES: .i .cpp .py .pyc .pyo .lo .la .o .obj
 
-objfiles = libsbml_wrap.$(OBJEXT)
+objfiles = libsbml_wrap.lo
 test_objfiles = $(objfiles)
 
 # The default action is to remake everything.
diff -urNad libsbml-3.2.0~/src/bindings/ruby/Makefile.in libsbml-3.2.0/src/bindings/ruby/Makefile.in
--- libsbml-3.2.0~/src/bindings/ruby/Makefile.in	2008-08-20 22:50:05.000000000 +0900
+++ libsbml-3.2.0/src/bindings/ruby/Makefile.in	2008-09-11 07:28:52.000000000 +0900
@@ -79,7 +79,7 @@
 endif
 
 extra_LDFLAGS  = $(RUBY_LDFLAGS)
-extra_LIBS     = -L../.. -lsbml $(RUBY_LIBS)
+extra_LIBS     = ../../libsbml.la $(RUBY_LIBS)
 
 ifdef USE_EXPAT
   extra_CPPFLAGS += @EXPAT_CPPFLAGS@ 
@@ -134,7 +134,7 @@
 .SUFFIXES:
 .SUFFIXES: .i .cpp .o .obj
 
-objfiles = libsbml_wrap.$(OBJEXT)
+objfiles = libsbml_wrap.lo
 test_objfiles = $(objfiles)
 
 # The default action is to remake everything.
@@ -237,13 +237,18 @@
 # -----------------------------------------------------------------------------
 
 install:
-	$(RUBY) -rfileutils -rrbconfig -e "include FileUtils::Verbose; mkpath(\"$(DESTDIR)$(LIBDIR)\")"
-	$(RUBY) -rfileutils -rrbconfig -e "include FileUtils::Verbose; install(\"$(libraries)\", \"$(DESTDIR)$(LIBDIR)\")"
+	archdir=`$(RUBY) -rrbconfig -e 'print Config::CONFIG["archdir"]'`; \
+	for i in $(libraries); do \
+	  $(INSTALL_SH) $$i $(DESTDIR)$$archdir/$$i; \
+	done
 
 installcheck:
 
 uninstall:
-	$(RUBY) -rfileutils -rrbconfig -e "include FileUtils::Verbose; rm(\"$(DESTDIR)$(LIBDIR)\" + \"/\" + \"$(libraries)\")"
+	archdir=`$(RUBY) -rrbconfig -e 'print Config::CONFIG["archdir"]'`; \
+	for i in $(libraries); do \
+	  rm $(DESTDIR)$$archdir/$$i; \
+	done
 
 # -----------------------------------------------------------------------------
 # Creating distribution (for libSBML maintainers only)
diff -urNad libsbml-3.2.0~/src/math/test/Makefile.in libsbml-3.2.0/src/math/test/Makefile.in
--- libsbml-3.2.0~/src/math/test/Makefile.in	2008-08-20 22:48:35.000000000 +0900
+++ libsbml-3.2.0/src/math/test/Makefile.in	2008-09-11 07:28:59.000000000 +0900
@@ -119,15 +119,15 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 otherdirs     = .. ../../util ../../xml ../../sbml ../../annotation \
 	 ../../validator ../../validator/constraints ../../units ../../compress
 
 ifdef USE_LAYOUT
   otherdirs +=	../../sbml/layout
 endif
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 
 
 test_objfiles = $(localobjfiles) $(otherobjfiles)
diff -urNad libsbml-3.2.0~/src/sbml/Makefile.in libsbml-3.2.0/src/sbml/Makefile.in
--- libsbml-3.2.0~/src/sbml/Makefile.in	2008-08-20 22:49:54.000000000 +0900
+++ libsbml-3.2.0/src/sbml/Makefile.in	2008-09-11 07:28:52.000000000 +0900
@@ -180,19 +180,7 @@
 
 # The libraries are actually placed in the parent directory.
 
-ifeq "$(HOST_TYPE)" "aix"
-# The nutty thing about AIX is that it uses the same extension (.a) for both
-# shared and static libraries.  You have to pick whether you want one or
-# the other; you can't provide both at the same time.  I'd like to know why
-# they thought this was a good idea.
-
-libraries = ../$(PACKAGE).$(SHAREDLIBEXT)
-
-else
-
-libraries = ../$(PACKAGE).a ../$(PACKAGE).$(SHAREDLIBEXT)
-
-endif
+libraries = ../$(PACKAGE).a ../$(PACKAGE).la
 
 # `distfiles' determines the files and directories included in a distribution.
 # `distfiles_exclude' is used to filter out specific items, so that even if
diff -urNad libsbml-3.2.0~/src/sbml/layout/test/Makefile.in libsbml-3.2.0/src/sbml/layout/test/Makefile.in
--- libsbml-3.2.0~/src/sbml/layout/test/Makefile.in	2008-08-20 22:49:56.000000000 +0900
+++ libsbml-3.2.0/src/sbml/layout/test/Makefile.in	2008-09-11 07:28:59.000000000 +0900
@@ -157,8 +157,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 
 otherdirs     = .. ../..  ../../../util ../../../xml ../../../math ../../../validator \
                 ../../../validator/constraints ../../../annotation ../../../units \
diff -urNad libsbml-3.2.0~/src/sbml/test/Makefile.in libsbml-3.2.0/src/sbml/test/Makefile.in
--- libsbml-3.2.0~/src/sbml/test/Makefile.in	2008-08-20 22:49:56.000000000 +0900
+++ libsbml-3.2.0/src/sbml/test/Makefile.in	2008-09-11 07:28:59.000000000 +0900
@@ -159,8 +159,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 
 otherdirs     = ..  ../../util ../../xml ../../math ../../units \
                 ../../validator ../../validator/constraints ../../annotation \
@@ -170,7 +170,7 @@
   otherdirs += ../layout
 endif
 
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
diff -urNad libsbml-3.2.0~/src/units/test/Makefile.in libsbml-3.2.0/src/units/test/Makefile.in
--- libsbml-3.2.0~/src/units/test/Makefile.in	2008-08-20 22:49:52.000000000 +0900
+++ libsbml-3.2.0/src/units/test/Makefile.in	2008-09-11 07:28:59.000000000 +0900
@@ -148,8 +148,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 otherdirs     = .. ../../util ../../xml ../../math ../../sbml ../../validator \
 	../../validator/constraints ../../annotation ../../compress
 
@@ -158,7 +158,7 @@
 endif
 
 
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
 ifdef USE_LIBCHECK
diff -urNad libsbml-3.2.0~/src/util/test/Makefile.in libsbml-3.2.0/src/util/test/Makefile.in
--- libsbml-3.2.0~/src/util/test/Makefile.in	2008-08-20 22:48:31.000000000 +0900
+++ libsbml-3.2.0/src/util/test/Makefile.in	2008-09-11 07:28:59.000000000 +0900
@@ -121,10 +121,10 @@
 # for running check are abstracted out into makefile-common-actions.mk,
 # which is included at the bottom of this file.
 
-tmp     = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-objects = $(filter %.$(OBJEXT),$(tmp))
+tmp     = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+objects = $(filter %.lo,$(tmp))
 
-test_objfiles = $(objects) $(wildcard ../*.$(OBJEXT))
+test_objfiles = $(objects) $(wildcard ../*.lo)
 
 ifdef USE_LIBCHECK
   check: all run-checks
diff -urNad libsbml-3.2.0~/src/validator/test/Makefile.in libsbml-3.2.0/src/validator/test/Makefile.in
--- libsbml-3.2.0~/src/validator/test/Makefile.in	2008-08-20 22:48:39.000000000 +0900
+++ libsbml-3.2.0/src/validator/test/Makefile.in	2008-09-11 07:28:59.000000000 +0900
@@ -155,8 +155,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 otherdirs     = .. ../constraints ../../util ../../xml ../../math ../../sbml \
 	 ../../units ../../annotation ../../compress
 
@@ -164,7 +164,7 @@
   otherdirs += ../../sbml/layout
 endif
 
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
 
diff -urNad libsbml-3.2.0~/src/xml/test/Makefile.in libsbml-3.2.0/src/xml/test/Makefile.in
--- libsbml-3.2.0~/src/xml/test/Makefile.in	2008-08-20 22:48:34.000000000 +0900
+++ libsbml-3.2.0/src/xml/test/Makefile.in	2008-09-11 07:28:59.000000000 +0900
@@ -127,11 +127,11 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 
 otherdirs     = .. ../../util ../../compress
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
