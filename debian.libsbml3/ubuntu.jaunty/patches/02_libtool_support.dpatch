#! /bin/sh /usr/share/dpatch/dpatch-run
## 02_libtool_support.dpatch by  <mozo@sfc.keio.ac.jp>
##
## All lines beginning with `## DP:' are a description of the patch.
## DP: No description.

@DPATCH@
diff -urNad libsbml-3.2.0~/Makefile.in libsbml-3.2.0/Makefile.in
--- libsbml-3.2.0~/Makefile.in	2008-08-17 22:50:36.000000000 +0900
+++ libsbml-3.2.0/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -184,11 +184,13 @@
   config/java.m4                    \
   config/libcheck.m4                \
   config/libxml.m4                  \
+  config/lt_link_helper.sh.in       \
   config/makefile-common-actions.mk \
   config/makefile-common-vars.mk.in \
   config/matlab.m4                  \
   config/missing                    \
   config/mkinstalldirs              \
+  config/mkoctfile_wrapper.sh.in    \
   config/octave.m4                  \
   config/perl.m4                    \
   config/python.m4                  \
@@ -209,7 +211,7 @@
 # makefile-common-actions.mk.
 
 extra_distclean = config.status config.cache config.log autom4te.cache \
-	src/common/config.h src/common/stamp-h1
+	src/common/config.h src/common/stamp-h1 config/lt_link_helper.sh config/mkoctfile_wrapper.sh
 
 # It's safer to remove and recreate the copy of the include files (in the
 # 'include' directory) after a make clean.  Previously we did it in a make
@@ -218,10 +220,6 @@
 
 extra_clean = include libsbml.pc
 
-ifeq "$(HOST_TYPE)" "cygwin"
-  extra_clean += libsbml.la
-endif
-
 # Misc things used later below.
 
 define nodoxygen
@@ -231,7 +229,7 @@
 # of the form `foo-recursive' to run 'make foo' in directories defined in
 # variable `subdirs'.
 
-all: configure Makefile include all-recursive libsbml.pc libsbml.la
+all: configure Makefile include all-recursive libsbml.pc
 
 docs:;
 ifneq "$(MAKEFLAGS)" ""
@@ -304,74 +302,38 @@
 
 
 # -----------------------------------------------------------------------------
-# libsbml.la.
-# -----------------------------------------------------------------------------
-
-# Currently we only need to provide this under cygwin.  Maybe we should also
-# provide it for libtool users on other platforms?
-
-libsbml.la: Makefile
-ifeq "$(HOST_TYPE)" "cygwin"
-	@rm -f libsbml.pc
-	@echo "# libsbml.la"                             > libsbml.la
-	@echo "# Generated by libSBML's Makefile."      >> libsbml.la
-	@echo ""                                        >> libsbml.la
-	@echo "library_names='libsbml.$(SHAREDLIBEXT)'" >> libsbml.la
-	@echo "libdir='$(LIBDIR)'"                      >> libsbml.la
-	@echo "dlname=''"                               >> libsbml.la
-	@echo "dlopen=''"                               >> libsbml.la
-	@echo "dlpreopen=''"                            >> libsbml.la
-	@echo "old_library=''"                          >> libsbml.la
-	@echo "current=0"                               >> libsbml.la
-	@echo "age=0"                                   >> libsbml.la
-	@echo "revision=0"                              >> libsbml.la
-	@echo "installed=yes"                           >> libsbml.la
-	@echo "shouldnotlink=no"                        >> libsbml.la
-  ifdef USE_XERCES
-	@echo "dependency_libs='${DEPENDENCY_LIBFLAGS}'" >> libsbml.la
-  endif
-  ifdef USE_EXPAT
-	@echo "dependency_libs='${DEPENDENCY_LIBFLAGS}'" >> libsbml.la
-  endif
-  ifdef USE_LIBXML
-	@echo "dependency_libs='${DEPENDENCY_LIBFLAGS}'" >> libsbml.la
-  endif
-endif
-
-
-# -----------------------------------------------------------------------------
 # Installation.
 # -----------------------------------------------------------------------------
 
 define install-linux-warning-msg
 
   The installation of libSBML is finished.  On certain platforms
   (such as Linux), you will also need to do one of the following:
   1) run 'ldconfig' (see the man page if this is unfamiliar)
   2) set the LD_LIBRARY_PATH (or equivalent) environment variable
   to contain the path "$(DESTDIR)$(LIBDIR)" so that programs can 
   find the libSBML library at run-time.
 
 endef
 define install-darwin-warning-msg
 
   The installation of libSBML is finished.  To use the library, you
   may also need to set your DYLD_LIBRARY_PATH environment to contain
   the path "$(DESTDIR)$(LIBDIR)" so that programs can find the 
   libSBML library at run-time.
 
 endef
 define uninstall-warning-msg
 
   Uninstallation complete.  WARNING: if you have run libSBML's 'configure'
   utility since the time of the last installation of libSBML on this computer, 
   the uninstallation just performed may not have removed all of the libSBML
   files.  The 'make uninstall' command only knows about the files installed
   by libSBML according to its MOST RECENT CONFIGURATION.
 
 endef
 
-install: all install-recursive install-warnings install-pc install-la
+install: all install-recursive install-warnings install-pc
 
 install-docs: install-docs-recursive
 
@@ -362,13 +324,7 @@
 install-pc: libsbml.pc
 	$(INSTALL_SH) libsbml.pc -m 0644 "$(DESTDIR)$(LIBDIR)/pkgconfig/libsbml.pc"
 
-install-la: libsbml.la
-ifeq "$(HOST_TYPE)" "cygwin"
-	$(INSTALL_SH) libsbml.la -m 0644 "$(DESTDIR)$(LIBDIR)/libsbml.la"
-endif
-
-
-uninstall: uninstall-recursive uninstall-libsbml-pc uninstall-libsbml-la
+uninstall: uninstall-recursive uninstall-libsbml-pc
 	@if test -d "$(DESTDIR)$(LIBDIR)"; then \
 	  if test -n "`find $(DESTDIR)$(LIBDIR) -maxdepth 0 -empty`"; then \
 	    echo rmdir "$(DESTDIR)$(LIBDIR)"; \
@@ -409,16 +365,6 @@
 	  fi; \
 	fi;
 
-uninstall-libsbml-la:
-ifeq "$(HOST_TYPE)" "cygwin"
-	@target="$(DESTDIR)$(LIBDIR)/libsbml.la"; \
-	if test -f $$target ; then \
-	  echo rm $$target; \
-	  rm $$target; \
-	fi;
-endif
-
-
 # -----------------------------------------------------------------------------
 # Cleaning.
 # -----------------------------------------------------------------------------
diff -urNad libsbml-3.2.0~/acinclude.m4 libsbml-3.2.0/acinclude.m4
--- libsbml-3.2.0~/acinclude.m4	1970-01-01 09:00:00.000000000 +0900
+++ libsbml-3.2.0/acinclude.m4	2008-09-11 07:31:59.000000000 +0900
@@ -0,0 +1,27 @@
+# generated automatically by aclocal 1.9.6 -*- Autoconf -*-
+
+# Copyright (C) 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004,
+# 2005  Free Software Foundation, Inc.
+# This file is free software; the Free Software Foundation
+# gives unlimited permission to copy and/or distribute it,
+# with or without modifications, as long as this notice is preserved.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
+# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
+# PARTICULAR PURPOSE.
+
+m4_include([config/doxygen.m4])
+m4_include([config/expat.m4])
+m4_include([config/java.m4])
+m4_include([config/libcheck.m4])
+m4_include([config/libxml.m4])
+m4_include([config/lisp.m4])
+m4_include([config/matlab.m4])
+m4_include([config/octave.m4])
+m4_include([config/perl.m4])
+m4_include([config/python.m4])
+m4_include([config/ruby.m4])
+m4_include([config/runldpath.m4])
+m4_include([config/swig.m4])
+m4_include([config/xercesc.m4])
diff -urNad libsbml-3.2.0~/config/lt_link_helper.sh.in libsbml-3.2.0/config/lt_link_helper.sh.in
--- libsbml-3.2.0~/config/lt_link_helper.sh.in	1970-01-01 09:00:00.000000000 +0900
+++ libsbml-3.2.0/config/lt_link_helper.sh.in	2008-09-11 07:31:59.000000000 +0900
@@ -0,0 +1,69 @@
+#!/bin/sh
+
+libdir=@prefix@/lib
+
+progname=`basename "$0"`
+
+dllibext=
+out_dir=
+out_file=
+out_filename=
+args=
+
+TAG=CXX
+
+if test -z "$1"; then
+    echo "${progname}: linker executable must be specified." >&2
+    exit
+fi
+
+linker_tmpdir=`mktemp -d $PWD/XXXXXXXX`
+stage_dir="${linker_tmpdir}/stage"
+mkdir -p "${stage_dir}/${libdir}"
+
+LD="$1"
+shift
+
+while test -n "$1"; do
+    case "$1" in
+        --tag=*)
+            TAG=`echo "$1" | sed -e 's/^--tag=//'`
+            ;;
+        -o)
+            shift
+            out_file="$1"
+            dllibext=`echo "${out_file}" | sed -e 's/.*\(\.[^.]*\)$/\1/'`
+            out_dir=`dirname "${out_file}"`
+            out_filename=`basename "${out_file}" "${dllibext}"`
+            ;;
+        *.o)
+            lt_obj=`echo "$1" | sed -e 's/\.o$/.lo/'`
+            args="${args} \"${lt_obj}\""
+            ;;
+        --libdir)
+            shift
+            libdir="$1" 
+            ;;
+        lib*.la | */lib*.la)
+            mkdir -p "${stage_dir}/${libdir}" && \
+                eval "@abs_top_srcdir@/libtool --mode=install cp \"$1\" \"${stage_dir}/${libdir}\""
+            libname=`basename "$1" | sed -e 's/lib\([^.]*\)\.la/\1/'`
+            args="${args} \"$1\""
+            ;; 
+        *)
+            args="${args} \"$1\""
+            ;;
+    esac
+    shift
+done
+
+if test -z "$out_file"; then
+    echo "${progname}: -o option not specified." >&2
+    rm -rf "${linker_tmpdir}"
+    exit 1
+fi
+
+eval "@abs_top_srcdir@/libtool --tag=\"$TAG\" --mode=link \"$LD\" -rpath \"${libdir}\" -inst-prefix-dir \"${stage_dir}\" -module -avoid-version -export-dynamic -shrext "${dllibext}" -o \"${out_dir}/${out_filename}.la\" $args" && \
+    eval "@abs_top_srcdir@/libtool --mode=install cp \"${out_dir}/${out_filename}.la\" \"${stage_dir}/${libdir}/${out_filename}.la\"" && \
+    cp "${stage_dir}/${libdir}/${out_filename}${dllibext}" "${out_dir}"
+rm -rf "${linker_tmpdir}"
diff -urNad libsbml-3.2.0~/config/makefile-common-actions.mk libsbml-3.2.0/config/makefile-common-actions.mk
--- libsbml-3.2.0~/config/makefile-common-actions.mk	2008-06-30 11:43:36.000000000 +0900
+++ libsbml-3.2.0/config/makefile-common-actions.mk	2008-09-11 07:33:31.000000000 +0900
@@ -175,86 +175,19 @@
 
 endif
 
-%.so ../%.so: $(objfiles)
+%.la ../%.la: $(objfiles)
 	$(call link_shared_lib,$@)
 
 %.$(JNIEXT) ../%.$(JNIEXT): $(objfiles)
-	$(call link_shared_lib,$@)
-
-#
-# -install_name option should be used when building an universal binary on MacOSX.
-#
-%.$(SHAREDLIBEXT) ../%.$(SHAREDLIBEXT): $(objfiles)
-ifeq "$(HOST_TYPE)" "darwin"
-	$(call link_shared_lib,$@ -install_name $@)
-else
-	$(call link_shared_lib,$@)
-endif
+	$(call link_dl_lib,$@)
 
 # The following define generic rules for creating object files.
 
-ifeq "$(HOST_TYPE)" "aix"
-
-.c.$(OBJEXT):
-	$(compile) -c -o $@ $<
-
-.c.obj:
-	if $(compile) -c -o $@ \
-	  `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
-	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.$(DEPEXT)"; \
-	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
-	fi
-
-.cpp.$(OBJEXT) .cxx.$(OBJEXT):
-	$(cxxcompile) -c -o $@ $<
-
-.cpp.obj:
-	if $(cxxcompile) -c -o $@ \
-	  `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
-	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.$(DEPEXT)"; \
-	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
-	fi
-
-else
-
-.c.$(OBJEXT):
-ifndef USE_UNIVBINARY
+.c.lo:
 	$(compile) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.$(DEPEXT)" -c -o $@ $<
-else
-	$(compile_nocflags) -MT $@ -MM -MP -MF "$(DEPDIR)/$*.$(DEPEXT)" $<
-	$(compile) -c -o $@ $<
-endif
-
-.c.obj:
-	if $(compile) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
-	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
-	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.$(DEPEXT)"; \
-	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
-	fi
 
-.cpp.$(OBJEXT) .cxx.$(OBJEXT):
-ifndef USE_UNIVBINARY
+.cpp.lo .cxx.lo:
 	$(cxxcompile) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.$(DEPEXT)" -c -o $@ $<
-else
-	$(cxxcompile_nocxxflags) -MT $@ -MM -MP -MF "$(DEPDIR)/$*.$(DEPEXT)" $<
-	$(cxxcompile) -c -o $@ $<
-endif
-
-.cpp.obj:
-	if $(cxxcompile) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" \
-	  -c -o $@ `if test -f '$<'; then $(CYGPATH_W) '$<'; else $(CYGPATH_W) '$(srcdir)/$<'; fi`; \
-	then mv "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.$(DEPEXT)"; \
-	else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; \
-	fi
-
-endif
-
-ifeq "$(HOST_TYPE)" "darwin"
-
-%.bundle ../%.bundle: $(objfiles)
-	$(call link_shared_lib,$@)
-
-endif
 
 # This next line ensures that the object output directory is created first.
 # Got this from a posting by Paul D. Smith to gnu.utils.help, 2001-12-03.
diff -urNad libsbml-3.2.0~/config/makefile-common-vars.mk.in libsbml-3.2.0/config/makefile-common-vars.mk.in
--- libsbml-3.2.0~/config/makefile-common-vars.mk.in	2008-07-27 09:28:13.000000000 +0900
+++ libsbml-3.2.0/config/makefile-common-vars.mk.in	2008-09-11 07:31:59.000000000 +0900
@@ -144,6 +144,7 @@
 OCTAVE            = @OCTAVE@
 MKOCTFILE         = @MKOCTFILE@
 MKOCTFILE_FLAGS   = @MKOCTFILE_FLAGS@
+MKOCTFILE_WRAPPER = $(SHELL) $(top_srcdir)/config/mkoctfile_wrapper.sh
 LOCALOCTFILEDIR   = @LOCALOCTFILEDIR@
 OCTAVE_CONFIG     = @OCTAVE_CONFIG@
 OCTAVEEXT         = @OCTAVEEXT@
@@ -219,6 +222,7 @@
 PACKAGE_VERSION   = @PACKAGE_VERSION@
 RANLIB            = @RANLIB@
 SHAREDLIBEXT      = @SHAREDLIBEXT@
+LIBTOOL           = @LIBTOOL@
 SHELL             = @SHELL@
 
 LIBSBML_VERSION   = @PACKAGE_VERSION@
diff -urNad libsbml-3.2.0~/config/mkoctfile_wrapper.sh.in libsbml-3.2.0/config/mkoctfile_wrapper.sh.in
--- libsbml-3.2.0~/config/mkoctfile_wrapper.sh.in	1970-01-01 09:00:00.000000000 +0900
+++ libsbml-3.2.0/config/mkoctfile_wrapper.sh.in	2008-09-11 07:31:59.000000000 +0900
@@ -0,0 +1,17 @@
+#!/bin/sh
+SHAREDLIBEXT=@SHAREDLIBEXT@
+
+args=
+while test ! -z "$1"; do
+    if test -f "$1" && expr "$1" : ".*lib.*\\.$SHAREDLIBEXT\$" > /dev/null; then
+        args="$args '-L`dirname \"$1\"`' '-l`basename \"$1\" \".$SHAREDLIBEXT\" | sed -e 's/^lib//'`'"
+    elif expr "$1" : "-f" > /dev/null; then
+        CFLAGS="$CFLAGS $1"
+    else
+        args="$args '$1'"
+    fi
+    shift
+done
+
+export CFLAGS
+eval "exec $args"
diff -urNad libsbml-3.2.0~/configure.ac libsbml-3.2.0/configure.ac
--- libsbml-3.2.0~/configure.ac	2008-08-17 02:58:40.000000000 +0900
+++ libsbml-3.2.0/configure.ac	2008-09-11 07:31:59.000000000 +0900
@@ -139,13 +139,17 @@
 AC_PROG_CXX
 AC_PROG_CC
 AC_PROG_CPP
-AC_PROG_RANLIB
+AC_LIBTOOL_WIN32_DLL
+AC_PROG_LIBTOOL
 AC_PROG_INSTALL
 AC_PROG_MAKE_SET
 
+AC_SUBST(LIBTOOL)
+
 AC_PATH_PROG([AUTOCONF],[autoconf],[autoconf])
 AC_PATH_PROG([ACLOCAL],[aclocal],[aclocal])
-AC_PATH_PROG([AR],[ar],[ar])
+AC_PATH_PROGS([SN], [sn])
+AC_PATH_PROGS([GACUTIL], [gacutil])
 
 CONFIG_PROG_SWIG(1.3.33)
 CONFIG_PROG_PYTHON
@@ -234,7 +238,9 @@
 dnl Output
 dnl ---------------------------------------------------------------------------
 
+AC_CONFIG_FILES([config/lt_link_helper.sh], [chmod a+x config/lt_link_helper.sh])
 AC_CONFIG_FILES([config/makefile-common-vars.mk])
+AC_CONFIG_FILES([config/mkoctfile_wrapper.sh], [chmod a+x config/mkoctfile_wrapper.sh])
 AC_CONFIG_FILES([./Makefile])
 
 AC_CONFIG_FILES([src/Makefile])
diff -urNad libsbml-3.2.0~/src/annotation/test/Makefile.in libsbml-3.2.0/src/annotation/test/Makefile.in
--- libsbml-3.2.0~/src/annotation/test/Makefile.in	2008-08-20 22:49:53.000000000 +0900
+++ libsbml-3.2.0/src/annotation/test/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -122,8 +122,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 otherdirs     = .. ../../util ../../xml ../../math ../../sbml ../../validator \
 	../../validator/constraints ../../units ../../compress
 
@@ -131,7 +131,7 @@
   otherdirs +=	../../sbml/layout
 endif
 
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
 ifdef USE_LIBCHECK
diff -urNad libsbml-3.2.0~/src/bindings/csharp/Makefile.in libsbml-3.2.0/src/bindings/csharp/Makefile.in
--- libsbml-3.2.0~/src/bindings/csharp/Makefile.in	2008-08-20 22:50:07.000000000 +0900
+++ libsbml-3.2.0/src/bindings/csharp/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -95,9 +95,9 @@
 # -L../../ option appears first in command-line to always link
 # with the libSBML's shared library file in the relative path.
 #
-extra_LDFLAGS     = -L../../ $(CSHARP_LDFLAGS)
+extra_LDFLAGS     = $(CSHARP_LDFLAGS)
 
-extra_LIBS        = -lsbml 
+extra_LIBS        = ../../libsbml.la
 
 ifdef USE_EXPAT
   extra_CPPFLAGS += @EXPAT_CPPFLAGS@
@@ -201,6 +201,12 @@
 
 ifeq "$(HOST_TYPE)" "darwin"
   platform_link_flags = -bundle
+  # environment variable MACOSX_DEPLOYMENT_TARGET must be set to 10.3 or later
+  # to use -undefined dynamic_lookup.
+  macosx_version=$(shell sw_vers -productVersion | cut -d"." -f1,2)
+  export MACOSX_DEPLOYMENT_TARGET=${macosx_version}
+%.$(CSHARP_EXT): $(patsubst %.cpp, %.lo, $(patsubst %.c, %.lo, $(sources)))
+	$(call link_dl_lib,$@)
 endif
 
 # 
@@ -424,15 +431,22 @@
 # -----------------------------------------------------------------------------
 
 install: check_swigfile_consistency $(libraries)
-	-$(GACUTIL) -i $(csproxy_lib) -root $(DESTDIR)$(LIBDIR)
-	$(INSTALL_SH) $(csproxy_lib) $(install_prefix)/$(csproxy_lib)
-	$(INSTALL_SH) $(dllimport_lib) $(install_prefix)/$(dllimport_lib)
-	ln -sf ../../libsbml.$(SHAREDLIBEXT) $(install_prefix)/libsbml.$(SHAREDLIBEXT)
+	$(MKINSTALLDIRS) $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0
+	for lib in $(csproxy_lib); do \
+	  $(GACUTIL) /i $$lib /root $(DESTDIR)$(LIBDIR); \
+	  $(INSTALL_SH) $$lib $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0/$$lib; \
+	done
+	for lib in $(dllimport_lib); do \
+	  $(INSTALL_SH) $$lib $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0/$$lib; \
+	done
 
 uninstall:
-	-$(GACUTIL) -u $(assembly_name) -root $(DESTDIR)$(LIBDIR)
-	rm -f $(install_prefix)/$(csproxy_lib)
-	rm -f $(install_prefix)/$(dllimport_lib)
-	rm -f $(install_prefix)/libsbml.$(SHAREDLIBEXT)
+	for lib in $(csproxy_lib); do \
+	  rm -f $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0/$$lib; \
+	  $(GACUTIL) /u $$lib /root $(DESTDIR)$(LIBDIR); \
+	done
+	for lib in $(dllimport_lib); do \
+	  rm -f $(DESTDIR)$(LIBDIR)/cli/libsbml-3.0/$$lib; \
+	done
 
 installcheck:
 
diff -urNad libsbml-3.2.0~/src/bindings/java/Makefile.in libsbml-3.2.0/src/bindings/java/Makefile.in
--- libsbml-3.2.0~/src/bindings/java/Makefile.in	2008-09-11 07:31:58.000000000 +0900
+++ libsbml-3.2.0/src/bindings/java/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -60,9 +60,9 @@
 # -L../../ option appears first in command-line to always link
 # with the libSBML's shared library file in the relative path.
 #
-extra_LDFLAGS     = -L../../ $(JAVA_LDFLAGS)
+extra_LDFLAGS     = $(JAVA_LDFLAGS)
 
-extra_LIBS        = -lsbml
+extra_LIBS        = ../../libsbml.la $(JAVA_LIBS)
 
 ifdef USE_EXPAT
   extra_CPPFLAGS += @EXPAT_CPPFLAGS@ 
@@ -142,7 +142,7 @@
 # build directives of `makefile-common-actions.mk'.
 
 .SUFFIXES:
-.SUFFIXES: .i .cpp .h .java .class .jar .o .obj .so .dylib
+.SUFFIXES: .i .cpp .h .java .class .jar .lo .la .o .obj .so .dylib
 
 # The default action is to remake everything.
 
@@ -315,9 +315,17 @@
 # -----------------------------------------------------------------------------
 
 install: check_swigfile_consistency $(libraries)
-	@list='$(libraries)'; for lib in $$list; do \
-	  echo "$(INSTALL) $$lib $(DESTDIR)$(LIBDIR)"; \
-	  $(INSTALL) $$lib $(DESTDIR)$(LIBDIR); \
+	list='$(libraries)'; for lib in $$list; do \
+	  if echo $$lib | grep '\.$(JNIEXT)$$' >/dev/null; then \
+		$(MKINSTALLDIRS) $(DESTDIR)$(LIBDIR)/jni; \
+	    $(INSTALL_SH) $$lib $(DESTDIR)$(LIBDIR)/jni; \
+	  elif echo $$lib | grep '\.jar$$' >/dev/null; then \
+		$(MKINSTALLDIRS) $(DESTDIR)$(DATADIR)/java; \
+	    $(INSTALL_SH) $$lib $(DESTDIR)$(DATADIR)/java; \
+	  else \
+		$(MKINSTALLDIRS) $(DESTDIR)$(LIBDIR); \
+	    $(INSTALL_SH) $$lib $(DESTDIR)$(LIBDIR); \
+	  fi; \
 	done;
 
 uninstall:
diff -urNad libsbml-3.2.0~/src/bindings/octave/Makefile.in libsbml-3.2.0/src/bindings/octave/Makefile.in
--- libsbml-3.2.0~/src/bindings/octave/Makefile.in	2008-08-20 22:50:02.000000000 +0900
+++ libsbml-3.2.0/src/bindings/octave/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -76,7 +76,7 @@
 # `extra_clean' and `extra_distclean' determine the files and directories
 # removed during "make clean" and "make distclean".
 
-extra_clean = TranslateSBML.$(OCTAVEEXT)
+extra_clean = TranslateSBML.$(OCTAVEEXT) libsbml.so* libsbml.a
 
 extra_disclean = $(matlab_sources)
 
@@ -95,10 +95,13 @@
 	  fi; \
 	done
 
-flags = $(MKOCTFILE_FLAGS) -DUSE_OCTAVE -I../.. -I../../../include -L../..
+flags = $(MKOCTFILE_FLAGS) -DUSE_OCTAVE -I../.. -I../../../include
 
-%.$(OCTAVEEXT): %.c
-	$(MKOCTFILE) $(flags) $^ -lsbml $(MKOCTFILE_LIBS)
+TranslateSBML.lo: TranslateSBML.c
+	$(LIBTOOL) --tag=CC --mode=compile $(MKOCTFILE_WRAPPER) $(MKOCTFILE) -c -o $@ $(flags) $<
+
+%.$(OCTAVEEXT): %.lo
+	$(TOP_SRCDIR)/config/lt_link_helper.sh $(MKOCTFILE_WRAPPER) --libdir $(LIBDIR) $(MKOCTFILE) -o $@ $(flags) $^ ../../libsbml.la $(MKOCTFILE_LIBS)
 
 
 # -----------------------------------------------------------------------------
diff -urNad libsbml-3.2.0~/src/bindings/perl/Makefile.PL.in libsbml-3.2.0/src/bindings/perl/Makefile.PL.in
--- libsbml-3.2.0~/src/bindings/perl/Makefile.PL.in	2008-08-20 22:50:04.000000000 +0900
+++ libsbml-3.2.0/src/bindings/perl/Makefile.PL.in	2008-09-11 07:31:59.000000000 +0900
@@ -50,10 +50,9 @@
               INSTALLDIRS => "site",
               LIBS        => "@XERCES_LDFLAGS@ @EXPAT_LDFLAGS@ @LIBXML_LDFLAGS@ @XERCES_LIBS@ @EXPAT_LIBS@ @LIBXML_LIBS@ @ZLIB_LIBS@ @BZ2_LIBS@ @LIBS@ -lm -lstdc++",
               LDDLFLAGS   => "@LDFLAGS@ $Config{lddlflags}",
-	      CC          => "@CXX@",
 	      CCFLAGS     => "@PERL_CPPFLAGS@ @CXXFLAGS@",
               INC         => "-I../swig -I../.. -I../../../include",
-              MYEXTLIB    => "../../libsbml.a",
+              MYEXTLIB    => "../../libsbml.la",
               macro       => {USE_SWIG => q[@USE_SWIG@]},
               OBJECT      => "LibSBML_wrap.o",
 	      MAN1PODS    => {},
diff -urNad libsbml-3.2.0~/src/bindings/perl/Makefile.in libsbml-3.2.0/src/bindings/perl/Makefile.in
--- libsbml-3.2.0~/src/bindings/perl/Makefile.in	2008-08-20 22:50:04.000000000 +0900
+++ libsbml-3.2.0/src/bindings/perl/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -139,7 +139,9 @@
 	@ echo "Reconfigure --with-perl in order to build the perl-bindings"
 	exit 1
 else
-	$(PERL) Makefile.PL $(if $(LIB),LIB=$(LIB),)
+	$(PERL) Makefile.PL $(if $(LIB),LIB=$(LIB),) \
+	  CC="$(LIBTOOL) --mode=compile $(CXX)" \
+	  LD="$(TOP_SRCDIR)/config/lt_link_helper.sh $(CXX) --libdir $(LIBDIR)"
 # The following perl commands add missing -lstdc++ option to EXTRALIBS and
 # LDLOADLIBS in Makefile-perl.
 # ExtUtil::Makemaker may ignore -lstdc++ option in some environments (e.g. MacOSX, cygwin)
diff -urNad libsbml-3.2.0~/src/bindings/python/Makefile.in libsbml-3.2.0/src/bindings/python/Makefile.in
--- libsbml-3.2.0~/src/bindings/python/Makefile.in	2008-08-20 22:50:03.000000000 +0900
+++ libsbml-3.2.0/src/bindings/python/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -56,6 +56,10 @@
 ifeq "$(HOST_TYPE)" "darwin"
   macosx_version=$(shell sw_vers -productVersion | cut -d"." -f1,2)
   export MACOSX_DEPLOYMENT_TARGET=${macosx_version}
+%.$(PYTHON_EXT): $(patsubst %.cpp, %.lo, $(patsubst %.c, %.lo, $(sources)))
+	$(call link_dl_lib,$@)
+else
+	libraries = _libsbml.$(PYTHON_EXT)
 endif
 
 # Variables `subdirs', `headers', `sources', `libraries', `extra_CPPFLAGS',
@@ -78,8 +80,8 @@
 # -L../../ option appears first in command-line to always link
 # with the libSBML's shared library file in the relative path.
 #
-extra_LDFLAGS  = -L../../ $(PYTHON_LDFLAGS)
-extra_LIBS     = -lsbml $(PYTHON_LIBS)
+extra_LDFLAGS  = $(PYTHON_LDFLAGS)
+extra_LIBS     = ../../libsbml.la $(PYTHON_LIBS)
 
 ifdef USE_EXPAT
   extra_CPPFLAGS += @EXPAT_CPPFLAGS@ 
@@ -146,9 +148,9 @@
 # -----------------------------------------------------------------------------
 
 .SUFFIXES:
-.SUFFIXES: .i .cpp .py .pyc .pyo .o .obj
+.SUFFIXES: .i .cpp .py .pyc .pyo .lo .la .o .obj
 
-objfiles = libsbml_wrap.$(OBJEXT)
+objfiles = libsbml_wrap.lo
 test_objfiles = $(objfiles)
 
 # The default action is to remake everything.
diff -urNad libsbml-3.2.0~/src/bindings/ruby/Makefile.in libsbml-3.2.0/src/bindings/ruby/Makefile.in
--- libsbml-3.2.0~/src/bindings/ruby/Makefile.in	2008-08-20 22:50:05.000000000 +0900
+++ libsbml-3.2.0/src/bindings/ruby/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -79,7 +79,7 @@
 endif
 
 extra_LDFLAGS  = -L../../ $(RUBY_LDFLAGS)
-extra_LIBS     = -lsbml $(RUBY_LIBS)
+extra_LIBS     = ../../libsbml.la $(RUBY_LIBS)
 
 ifdef USE_EXPAT
   extra_CPPFLAGS += @EXPAT_CPPFLAGS@ 
@@ -134,7 +134,7 @@
 .SUFFIXES:
 .SUFFIXES: .i .cpp .o .obj
 
-objfiles = libsbml_wrap.$(OBJEXT)
+objfiles = libsbml_wrap.lo
 test_objfiles = $(objfiles)
 
 # The default action is to remake everything.
diff -urNad libsbml-3.2.0~/src/math/test/Makefile.in libsbml-3.2.0/src/math/test/Makefile.in
--- libsbml-3.2.0~/src/math/test/Makefile.in	2008-08-20 22:48:35.000000000 +0900
+++ libsbml-3.2.0/src/math/test/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -119,16 +119,16 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 otherdirs     = .. ../../util ../../xml ../../sbml ../../annotation \
 	 ../../validator ../../validator/constraints ../../units ../../compress \
 	 ../../common

 ifdef USE_LAYOUT
   otherdirs +=	../../sbml/layout
 endif
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 
 
 test_objfiles = $(localobjfiles) $(otherobjfiles)
diff -urNad libsbml-3.2.0~/src/sbml/Makefile.in libsbml-3.2.0/src/sbml/Makefile.in
--- libsbml-3.2.0~/src/sbml/Makefile.in	2008-08-20 22:49:54.000000000 +0900
+++ libsbml-3.2.0/src/sbml/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -180,19 +180,7 @@
 
 # The libraries are actually placed in the parent directory.
 
-ifeq "$(HOST_TYPE)" "aix"
-# The nutty thing about AIX is that it uses the same extension (.a) for both
-# shared and static libraries.  You have to pick whether you want one or
-# the other; you can't provide both at the same time.  I'd like to know why
-# they thought this was a good idea.
-
-libraries = ../$(PACKAGE).$(SHAREDLIBEXT)
-
-else
-
-libraries = ../$(PACKAGE).a ../$(PACKAGE).$(SHAREDLIBEXT)
-
-endif
+libraries = ../$(PACKAGE).a ../$(PACKAGE).la
 
 # `distfiles' determines the files and directories included in a distribution.
 # `distfiles_exclude' is used to filter out specific items, so that even if
diff -urNad libsbml-3.2.0~/src/sbml/layout/test/Makefile.in libsbml-3.2.0/src/sbml/layout/test/Makefile.in
--- libsbml-3.2.0~/src/sbml/layout/test/Makefile.in	2008-08-20 22:49:56.000000000 +0900
+++ libsbml-3.2.0/src/sbml/layout/test/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -157,8 +157,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 
 otherdirs     = .. ../..  ../../../util ../../../xml ../../../math ../../../validator \
                 ../../../validator/constraints ../../../annotation ../../../units \
diff -urNad libsbml-3.2.0~/src/sbml/test/Makefile.in libsbml-3.2.0/src/sbml/test/Makefile.in
--- libsbml-3.2.0~/src/sbml/test/Makefile.in	2008-08-20 22:49:56.000000000 +0900
+++ libsbml-3.2.0/src/sbml/test/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -159,8 +159,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 
 otherdirs     = ..  ../../util ../../xml ../../math ../../units \
                 ../../validator ../../validator/constraints ../../annotation \
@@ -170,7 +170,7 @@
   otherdirs += ../layout
 endif
 
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
diff -urNad libsbml-3.2.0~/src/units/test/Makefile.in libsbml-3.2.0/src/units/test/Makefile.in
--- libsbml-3.2.0~/src/units/test/Makefile.in	2008-08-20 22:49:52.000000000 +0900
+++ libsbml-3.2.0/src/units/test/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -148,8 +148,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 otherdirs     = .. ../../util ../../xml ../../math ../../sbml ../../validator \
 	../../validator/constraints ../../annotation ../../compress
 
@@ -158,7 +158,7 @@
 endif
 
 
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
 ifdef USE_LIBCHECK
diff -urNad libsbml-3.2.0~/src/util/test/Makefile.in libsbml-3.2.0/src/util/test/Makefile.in
--- libsbml-3.2.0~/src/util/test/Makefile.in	2008-08-20 22:48:31.000000000 +0900
+++ libsbml-3.2.0/src/util/test/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -121,10 +121,10 @@
 # for running check are abstracted out into makefile-common-actions.mk,
 # which is included at the bottom of this file.
 
-tmp     = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-objects = $(filter %.$(OBJEXT),$(tmp))
+tmp     = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+objects = $(filter %.lo,$(tmp))
 
-test_objfiles = $(objects) $(wildcard ../*.$(OBJEXT))
+test_objfiles = $(objects) $(wildcard ../*.lo)
 
 ifdef USE_LIBCHECK
   check: all run-checks
diff -urNad libsbml-3.2.0~/src/validator/test/Makefile.in libsbml-3.2.0/src/validator/test/Makefile.in
--- libsbml-3.2.0~/src/validator/test/Makefile.in	2008-08-20 22:48:39.000000000 +0900
+++ libsbml-3.2.0/src/validator/test/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -155,8 +155,8 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 otherdirs     = .. ../constraints ../../util ../../xml ../../math ../../sbml \
 	 ../../units ../../annotation ../../compress
 
@@ -164,7 +164,7 @@
   otherdirs += ../../sbml/layout
 endif
 
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
 
diff -urNad libsbml-3.2.0~/src/xml/test/Makefile.in libsbml-3.2.0/src/xml/test/Makefile.in
--- libsbml-3.2.0~/src/xml/test/Makefile.in	2008-08-20 22:48:34.000000000 +0900
+++ libsbml-3.2.0/src/xml/test/Makefile.in	2008-09-11 07:31:59.000000000 +0900
@@ -127,11 +127,11 @@
 # dependencies on other subdirectoris of the source tree, we do some rummaging
 # around in .. and ../../subdirs.
 
-tmp           = $(test_sources:.cpp=.$(OBJEXT)) $(test_sources:.c=.$(OBJEXT))
-localobjfiles = $(filter %.$(OBJEXT),$(tmp))
+tmp           = $(test_sources:.cpp=.lo) $(test_sources:.c=.lo)
+localobjfiles = $(filter %.lo,$(tmp))
 
 otherdirs     = .. ../../util ../../compress ../../common
-otherobjfiles = $(wildcard $(addsuffix /*.$(OBJEXT),$(otherdirs)))
+otherobjfiles = $(wildcard $(addsuffix /*.lo,$(otherdirs)))
 
 test_objfiles = $(localobjfiles) $(otherobjfiles)
 
